import{a as x,d as y,b as M,g as D,u as r,s as U,i as d}from"./flagcdn-DBDaqD4n.js";import{U as R}from"./app-C_bSeY2O.js";import"./modulepreload-polyfill-B5Qt9EMX.js";import"./preload-helper-D7HrI6pR.js";async function S(e){var m,u;const i=x.currentUser;if(!i)return{allowed:!1,plan:"none"};const s=y(M,"users",i.uid);try{const n=await D(s);if(!n.exists())return{allowed:!1,plan:"none"};const a=n.data(),o=a.plan||"free",f=((m=a.usageResetTimestamp)==null?void 0:m.toDate())||new Date,w=30*24*60*60*1e3,c=new Date(f.getTime()+w),g=new Date;if(g>=c)return await r(s,{monthlyTextCount:0,monthlyCallCount:0,usageResetTimestamp:U()}),await r(s,{[e==="textMessages"?"monthlyTextCount":"monthlyCallCount"]:d(1)}),{allowed:!0,plan:o,daysUntilReset:30};const h=e==="imageMessages"?"textMessages":e,C=(u=R[o])==null?void 0:u[h];let l;if(e==="textMessages"||e==="imageMessages"?l=a.monthlyTextCount||0:l=a.monthlyCallCount||0,l<C){let t;return e==="textMessages"||e==="imageMessages"?t="monthlyTextCount":t="monthlyCallCount",await r(s,{[t]:d(1)}),{allowed:!0,plan:o}}else{const t=c.getTime()-g.getTime(),p=Math.ceil(t/(1e3*60*60*24));return{allowed:!1,plan:o,daysUntilReset:p}}}catch(n){return console.error("Error in checkAndIncrementUsage:",n),{allowed:!1,plan:"unknown"}}}export{S as checkAndIncrementUsage};
